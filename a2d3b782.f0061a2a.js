(window.webpackJsonp=window.webpackJsonp||[]).push([[111],{247:function(e,t,i){"use strict";i.r(t),i.d(t,"frontMatter",(function(){return l})),i.d(t,"metadata",(function(){return s})),i.d(t,"rightToc",(function(){return c})),i.d(t,"default",(function(){return b}));var r=i(1),o=i(9),n=(i(0),i(308)),l={id:"helpers-javascript",title:"JavaScript"},s={id:"basics/helpers-javascript",title:"JavaScript",description:"[![docs-source](https://img.shields.io/badge/source-eigthshift--frontend--libs-yellow?style=for-the-badge&logo=javascript&labelColor=2a2a2a)](https://github.com/infinum/eightshift-frontend-libs/tree/develop/blocks/init/src/blocks/)",source:"@site/docs/basics/helpers-javascript.md",permalink:"/eightshift-docs/docs/basics/helpers-javascript",sidebar:"docs",previous:{title:"Helpers",permalink:"/eightshift-docs/docs/basics/helpers"},next:{title:"Scss",permalink:"/eightshift-docs/docs/basics/helpers-scss"}},c=[{value:"icons",id:"icons",children:[]},{value:"illustrations",id:"illustrations",children:[]},{value:"blockIcons",id:"blockicons",children:[]},{value:"getActions",id:"getactions",children:[]},{value:"getOption",id:"getoption",children:[]},{value:"getOptionColors",id:"getoptioncolors",children:[]},{value:"getOptions",id:"getoptions",children:[]},{value:"getPaletteColors",id:"getpalettecolors",children:[]},{value:"inserter",id:"inserter",children:[]},{value:"outputCssVariablesGlobal",id:"outputcssvariablesglobal",children:[]},{value:"outputCssVariables",id:"outputcssvariables",children:[]},{value:"getUnique",id:"getunique",children:[]},{value:"overrideInnerBlockAttributes",id:"overrideinnerblockattributes",children:[]},{value:"overrideInnerBlockSimpleWrapperAttributes",id:"overrideinnerblocksimplewrapperattributes",children:[]},{value:"pasteInto",id:"pasteinto",children:[]},{value:"props",id:"props",children:[]},{value:"getAttributes",id:"getattributes",children:[]},{value:"getExample",id:"getexample",children:[]},{value:"registerBlocks",id:"registerblocks",children:[]},{value:"registerVariations",id:"registervariations",children:[]},{value:"ucfirst",id:"ucfirst",children:[]},{value:"camelize",id:"camelize",children:[]},{value:"checkAttr",id:"checkattr",children:[]},{value:"checkAttrResponsive",id:"checkattrresponsive",children:[]},{value:"cookies",id:"cookies",children:[]},{value:"debounce",id:"debounce",children:[]},{value:"devices",id:"devices",children:[]},{value:"dynamicImport",id:"dynamicimport",children:[]},{value:"elementChildrenHeight",id:"elementchildrenheight",children:[]},{value:"escape-string",id:"escape-string",children:[]},{value:"navigator",id:"navigator",children:[]},{value:"responsiveSelectors",id:"responsiveselectors",children:[]},{value:"selector",id:"selector",children:[]},{value:"truncateMiddle",id:"truncatemiddle",children:[]},{value:"yoastSeo",id:"yoastseo",children:[]},{value:"blockDetails",id:"blockdetails",children:[]},{value:"Gutenberg",id:"gutenberg",children:[]},{value:"storybookDefaultMocksCategories",id:"storybookdefaultmockscategories",children:[]},{value:"storybookDefaultMocksColorPalette",id:"storybookdefaultmockscolorpalette",children:[]},{value:"storybookWindowObjects,",id:"storybookwindowobjects",children:[]},{value:"storybookWpStyles",id:"storybookwpstyles",children:[]}],a={rightToc:c};function b(e){var t=e.components,i=Object(o.a)(e,["components"]);return Object(n.b)("wrapper",Object(r.a)({},a,i,{components:t,mdxType:"MDXLayout"}),Object(n.b)("p",null,Object(n.b)("a",Object(r.a)({parentName:"p"},{href:"https://github.com/infinum/eightshift-frontend-libs/tree/develop/blocks/init/src/blocks/"}),Object(n.b)("img",Object(r.a)({parentName:"a"},{src:"https://img.shields.io/badge/source-eigthshift--frontend--libs-yellow?style=for-the-badge&logo=javascript&labelColor=2a2a2a",alt:"docs-source"})))),Object(n.b)("p",null,"All JavaScript helpers can be imported from the ",Object(n.b)("inlineCode",{parentName:"p"},"@eightshift/frontend-libs/scripts")," folder, so you don't need to think about the internal folder structure of Eightshift Frontend Libs. If you want multiple functions imported just concatenate them in the import like this:"),Object(n.b)("pre",null,Object(n.b)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),"import {\n    camelize,\n    checkAttr,\n    props,\n    ...\n} from '@eightshift/frontend-libs/scripts';\n")),Object(n.b)("h1",{id:"editor-helpers"},Object(n.b)("a",Object(r.a)({parentName:"h1"},{href:"https://github.com/infinum/eightshift-frontend-libs/tree/develop/scripts/editor"}),"Editor helpers")),Object(n.b)("p",null,"All of these helpers are generally only used in the Block Editor."),Object(n.b)("h3",{id:"icons"},"icons"),Object(n.b)("p",null,"All UI icons."),Object(n.b)("h3",{id:"illustrations"},"illustrations"),Object(n.b)("p",null,"Illustrations for helper modals."),Object(n.b)("h3",{id:"blockicons"},"blockIcons"),Object(n.b)("p",null,"Block icons, primarily used in block manifests."),Object(n.b)("h3",{id:"getactions"},"getActions"),Object(n.b)("p",null,"Create attributes actions from blocks manifest.json.\nThis helper is deprecated and should not be used anymore."),Object(n.b)("h3",{id:"getoption"},"getOption"),Object(n.b)("p",null,"Provides ability to override component options from the parent block/component."),Object(n.b)("h3",{id:"getoptioncolors"},"getOptionColors"),Object(n.b)("p",null,"Use this hook to filter the global colors out of the component or block manifest.\nThis function is deprecated and getOption should be used."),Object(n.b)("h3",{id:"getoptions"},"getOptions"),Object(n.b)("p",null,"Combines two objects of options, one from current component and the other from the parent component."),Object(n.b)("h3",{id:"getpalettecolors"},"getPaletteColors"),Object(n.b)("p",null,"Use this hook to read editor-color-palette colors directly from WP built in store."),Object(n.b)("h3",{id:"inserter"},"inserter"),Object(n.b)("p",null,"Development inserter made to insert one or multiple blocks in the dom using console."),Object(n.b)("h3",{id:"outputcssvariablesglobal"},"outputCssVariablesGlobal"),Object(n.b)("p",null,"Get Global manifest.json and return global variables as CSS variables."),Object(n.b)("h3",{id:"outputcssvariables"},"outputCssVariables"),Object(n.b)("p",null,"Get component/block options and process them in CSS variables."),Object(n.b)("h3",{id:"getunique"},"getUnique"),Object(n.b)("p",null,"Returns a unique ID generally used for css variables."),Object(n.b)("h3",{id:"overrideinnerblockattributes"},"overrideInnerBlockAttributes"),Object(n.b)("p",null,"Used to set attributes on all innerBlocks. This value will be stored in the block editor store and set to a block."),Object(n.b)("h3",{id:"overrideinnerblocksimplewrapperattributes"},"overrideInnerBlockSimpleWrapperAttributes"),Object(n.b)("p",null,"Used to set attributes on all innerBlocks preset only for simple wrapper setup. This value will be stored in the block editor store and set to a block."),Object(n.b)("h3",{id:"pasteinto"},"pasteInto"),Object(n.b)("p",null,"Paste event handler."),Object(n.b)("h3",{id:"props"},"props"),Object(n.b)("p",null,"Output only attributes that are used in the component and remove everything else."),Object(n.b)("h3",{id:"getattributes"},"getAttributes"),Object(n.b)("p",null,'Get Block attributes combined in one: "shared, global, wrapper, components, block".'),Object(n.b)("h3",{id:"getexample"},"getExample"),Object(n.b)("p",null,'Get Block example attributes combined in one: "components and block".'),Object(n.b)("h3",{id:"registerblocks"},"registerBlocks"),Object(n.b)("p",null,"Register all Block Editor blocks using WP ",Object(n.b)("inlineCode",{parentName:"p"},"registerBlockType")," method."),Object(n.b)("h3",{id:"registervariations"},"registerVariations"),Object(n.b)("p",null,"Register all Variations Editor blocks using WP ",Object(n.b)("inlineCode",{parentName:"p"},"registerBlockVariation")," method."),Object(n.b)("h3",{id:"ucfirst"},"ucfirst"),Object(n.b)("p",null,"Convert the first letter of a string to uppercase."),Object(n.b)("h1",{id:"general-helpers"},Object(n.b)("a",Object(r.a)({parentName:"h1"},{href:"https://github.com/infinum/eightshift-frontend-libs/tree/develop/scripts/helpers"}),"General helpers")),Object(n.b)("p",null,"These are all helpers generally used anywhere."),Object(n.b)("h3",{id:"camelize"},"camelize"),Object(n.b)("p",null,"Returns a camelCase-formatted string."),Object(n.b)("h3",{id:"checkattr"},"checkAttr"),Object(n.b)("p",null,"Check if attribute exist in attributes list and add default value if not."),Object(n.b)("h3",{id:"checkattrresponsive"},"checkAttrResponsive"),Object(n.b)("p",null,"Map and check attributes for responsive object."),Object(n.b)("h3",{id:"cookies"},"cookies"),Object(n.b)("p",null,"Helper to set and unset cookies."),Object(n.b)("h3",{id:"debounce"},"debounce"),Object(n.b)("p",null,"Debounces the provided function."),Object(n.b)("h3",{id:"devices"},"devices"),Object(n.b)("p",null,"Detect a certain device, so specific functionality can be implemented for it."),Object(n.b)("h3",{id:"dynamicimport"},"dynamicImport"),Object(n.b)("p",null,"Loop all paths required using require.context method."),Object(n.b)("h3",{id:"elementchildrenheight"},"elementChildrenHeight"),Object(n.b)("p",null,"Returns height of the element measured by height of its children."),Object(n.b)("h3",{id:"escape-string"},"escape-string"),Object(n.b)("p",null,"Takes the provided string and removes special characters"),Object(n.b)("h3",{id:"navigator"},"navigator"),Object(n.b)("p",null,"The ",Object(n.b)("inlineCode",{parentName:"p"},"Navigator.vibrate()")," method pulses the vibration hardware on the device, if such hardware exists."),Object(n.b)("h3",{id:"responsiveselectors"},"responsiveSelectors"),Object(n.b)("p",null,"Create responsive selectors used for responsive attributes."),Object(n.b)("h3",{id:"selector"},"selector"),Object(n.b)("p",null,"Returns BEM selector for HTML class and checks if the condition part is set."),Object(n.b)("h3",{id:"truncatemiddle"},"truncateMiddle"),Object(n.b)("p",null,"Slices the string and inputs the provided separator after the specified characters."),Object(n.b)("h1",{id:"plugins-helpers"},Object(n.b)("a",Object(r.a)({parentName:"h1"},{href:"https://github.com/infinum/eightshift-frontend-libs/tree/develop/scripts/plugins"}),"Plugins helpers")),Object(n.b)("p",null,"These are all helpers generally only in specific plugins."),Object(n.b)("h3",{id:"yoastseo"},"yoastSeo"),Object(n.b)("p",null,'This helper will search all blocks and components manifests and find attributes that have "seo": "true" key.\nThis key will be added in to the content and proceed by the YoastSeo Analysis plugin.'),Object(n.b)("h1",{id:"storybook-helpers"},Object(n.b)("a",Object(r.a)({parentName:"h1"},{href:"https://github.com/infinum/eightshift-frontend-libs/tree/develop/scripts/storybook"}),"Storybook helpers")),Object(n.b)("p",null,"These are all helpers generally only in Storybook."),Object(n.b)("h3",{id:"blockdetails"},"blockDetails"),Object(n.b)("p",null,"Combine block details in one object."),Object(n.b)("h3",{id:"gutenberg"},"Gutenberg"),Object(n.b)("p",null,"Load actual Block Editor and all the magic."),Object(n.b)("h3",{id:"storybookdefaultmockscategories"},"storybookDefaultMocksCategories"),Object(n.b)("p",null,"Manually populate categories for blocks. This is generated in the PHP part of the real project."),Object(n.b)("h3",{id:"storybookdefaultmockscolorpalette"},"storybookDefaultMocksColorPalette"),Object(n.b)("p",null,"Manually populate blocks color palette. This is generated in the PHP part of the real project."),Object(n.b)("h3",{id:"storybookwindowobjects"},"storybookWindowObjects,"),Object(n.b)("p",null,"Loading WP build files."),Object(n.b)("h3",{id:"storybookwpstyles"},"storybookWpStyles"),Object(n.b)("p",null,"Loading styles for block editor."))}b.isMDXComponent=!0},308:function(e,t,i){"use strict";i.d(t,"a",(function(){return d})),i.d(t,"b",(function(){return h}));var r=i(0),o=i.n(r);function n(e,t,i){return t in e?Object.defineProperty(e,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[t]=i,e}function l(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,r)}return i}function s(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?l(Object(i),!0).forEach((function(t){n(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):l(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}function c(e,t){if(null==e)return{};var i,r,o=function(e,t){if(null==e)return{};var i,r,o={},n=Object.keys(e);for(r=0;r<n.length;r++)i=n[r],t.indexOf(i)>=0||(o[i]=e[i]);return o}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)i=n[r],t.indexOf(i)>=0||Object.prototype.propertyIsEnumerable.call(e,i)&&(o[i]=e[i])}return o}var a=o.a.createContext({}),b=function(e){var t=o.a.useContext(a),i=t;return e&&(i="function"==typeof e?e(t):s({},t,{},e)),i},d=function(e){var t=b(e.components);return o.a.createElement(a.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return o.a.createElement(o.a.Fragment,{},t)}},u=Object(r.forwardRef)((function(e,t){var i=e.components,r=e.mdxType,n=e.originalType,l=e.parentName,a=c(e,["components","mdxType","originalType","parentName"]),d=b(i),u=r,h=d["".concat(l,".").concat(u)]||d[u]||p[u]||n;return i?o.a.createElement(h,s({ref:t},a,{components:i})):o.a.createElement(h,s({ref:t},a))}));function h(e,t){var i=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var n=i.length,l=new Array(n);l[0]=u;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:r,l[1]=s;for(var a=2;a<n;a++)l[a]=i[a];return o.a.createElement.apply(null,l)}return o.a.createElement.apply(null,i)}u.displayName="MDXCreateElement"}}]);