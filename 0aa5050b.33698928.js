(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{101:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return a})),n.d(t,"rightToc",(function(){return i})),n.d(t,"default",(function(){return p}));var r=n(1),s=(n(0),n(158));const o={id:"post-type",title:"Post Type"},a={id:"guides/post-type",title:"Post Type",description:"[![docs-source](https://img.shields.io/badge/source-eigthshift--libs-blue?style=for-the-badge&logo=php&labelColor=2a2a2a)](https://github.com/infinum/eightshift-libs/blob/develop/src/custom-post-type/class-base-post-type.php)",source:"@site/docs/guides/post-type.md",permalink:"/eightshift-docs/docs/guides/post-type",sidebar:"docs",previous:{title:"Enqueue",permalink:"/eightshift-docs/docs/guides/enqueue"},next:{title:"Taxonomy",permalink:"/eightshift-docs/docs/guides/taxonomy"}},i=[{value:"Example:",id:"example",children:[]}],c={rightToc:i};function p({components:e,...t}){return Object(s.b)("wrapper",Object(r.a)({},c,t,{components:e,mdxType:"MDXLayout"}),Object(s.b)("p",null,Object(s.b)("a",Object(r.a)({parentName:"p"},{href:"https://github.com/infinum/eightshift-libs/blob/develop/src/custom-post-type/class-base-post-type.php"}),Object(s.b)("img",Object(r.a)({parentName:"a"},{src:"https://img.shields.io/badge/source-eigthshift--libs-blue?style=for-the-badge&logo=php&labelColor=2a2a2a",alt:"docs-source"})))),Object(s.b)("p",null,"When working on a WordPress project it is possible that, at one point, you will need to register a Custom Post Type.\nCustom Post Type class is located in ",Object(s.b)("inlineCode",{parentName:"p"},"Eightshift Libs"),". To extend it, use ",Object(s.b)("inlineCode",{parentName:"p"},"Eightshift_Libs\\Custom_Post_Type\\Base_Post_Type")," class. This is an abstract class."),Object(s.b)("h2",{id:"example"},"Example:"),Object(s.b)("p",null,"To create a custom post type:\n1. make a new class ",Object(s.b)("inlineCode",{parentName:"p"},"src/custom-post-type/class-projects.php"),".\n2. implement all the methods provided in the example.\n3. register the class inside the ",Object(s.b)("inlineCode",{parentName:"p"},"class-main.php")," file.\n4. dump autoload."),Object(s.b)("pre",null,Object(s.b)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),"<?php\n/**\n * File that holds class for \"Projects\" custom post type registration.\n *\n * @package Eightshift_Boilerplate\\Custom_Post_Type\n */\n\nnamespace Eightshift_Boilerplate\\Custom_Post_Type;\n\nuse Eightshift_Libs\\Custom_Post_Type\\Base_Post_Type;\nuse Eightshift_Libs\\Custom_Post_Type\\Label_Generator;\n\n/**\n * Class Projects.\n */\nclass Projects extends Base_Post_Type {\n\n  /**\n   * Post type slug constant.\n   *\n   * @var string\n   */\n  const POST_TYPE_SLUG = 'projects-type';\n\n  /**\n   * URL slug for the custom post type.\n   *\n   * @var string\n   */\n  const POST_TYPE_URL_SLUG = 'projects';\n\n  /**\n   * Rest API Endpoint slug constant.\n   *\n   * @var string\n   */\n  const REST_API_ENDPOINT_SLUG = 'projects';\n\n  /**\n   * Capability type for projects post type.\n   *\n   * @var string\n   */\n  const POST_CAPABILITY_TYPE = 'post';\n\n  /**\n   * Location of menu in sidebar.\n   *\n   * @var int\n   */\n  const MENU_POSITION = 20;\n\n  /**\n   * Set menu icon.\n   *\n   * @var string\n   */\n  const MENU_ICON = 'dashicons-analytics';\n\n  /**\n   * Get the slug to use for the Projects custom post type.\n   *\n   * @return string Custom post type slug.\n   */\n  protected function get_post_type_slug() : string {\n    return self::POST_TYPE_SLUG;\n  }\n\n  /**\n   * Get the arguments that configure the Projects custom post type.\n   *\n   * @return array Array of arguments.\n   */\n  protected function get_post_type_arguments() : array {\n\n    $nouns = [\n      Label_Generator::SINGULAR_NAME_UC => esc_html_x( 'Project', 'Projects post uppercase singular name', 'eightshift-boilerplate' ),\n      Label_Generator::SINGULAR_NAME_LC => esc_html_x( 'project', 'Projects post lowercase singular name', 'eightshift-boilerplate' ),\n      Label_Generator::PLURAL_NAME_UC => esc_html_x( 'Projects', 'Projects post uppercase plural name', 'eightshift-boilerplate' ),\n      Label_Generator::PLURAL_NAME_LC => esc_html_x( 'projects', 'Projects post lowercase plural name', 'eightshift-boilerplate' ),\n    ];\n\n    return [\n      'label'              => $nouns[ Label_Generator::SINGULAR_NAME_UC ],\n      'labels'             => ( new Label_Generator() )->get_generated_labels( $nouns ),\n      'public'             => true,\n      'publicly_queryable' => true,\n      'show_ui'            => true,\n      'show_in_menu'       => true,\n      'query_var'          => true,\n      'capability_type'    => self::POST_CAPABILITY_TYPE,\n      'has_archive'        => true,\n      'rewrite'            => [ 'slug' => static::POST_TYPE_URL_SLUG ],\n      'hierarchical'       => false,\n      'menu_icon'          => static::MENU_ICON,\n      'menu_position'      => static::MENU_POSITION,\n      'supports'           => [ 'title', 'editor', 'author', 'thumbnail', 'excerpt', 'comments' ],\n      'show_in_rest'       => true,\n      'rest_base'          => static::REST_API_ENDPOINT_SLUG,\n    ];\n  }\n}\n\n")))}p.isMDXComponent=!0},158:function(e,t,n){"use strict";n.d(t,"a",(function(){return u})),n.d(t,"b",(function(){return h}));var r=n(0),s=n.n(r);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,s=function(e,t){if(null==e)return{};var n,r,s={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(s[n]=e[n]);return s}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(s[n]=e[n])}return s}var p=s.a.createContext({}),l=function(e){var t=s.a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i({},t,{},e)),n},u=function(e){var t=l(e.components);return s.a.createElement(p.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return s.a.createElement(s.a.Fragment,{},t)}},m=Object(r.forwardRef)((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,a=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),u=l(n),m=r,h=u["".concat(a,".").concat(m)]||u[m]||b[m]||o;return n?s.a.createElement(h,i({ref:t},p,{components:n})):s.a.createElement(h,i({ref:t},p))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,a=new Array(o);a[0]=m;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:r,a[1]=i;for(var p=2;p<o;p++)a[p]=n[p];return s.a.createElement.apply(null,a)}return s.a.createElement.apply(null,n)}m.displayName="MDXCreateElement"}}]);