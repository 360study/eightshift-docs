(window.webpackJsonp=window.webpackJsonp||[]).push([[90],{188:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return c})),n.d(t,"rightToc",(function(){return s})),n.d(t,"default",(function(){return u}));var r=n(1),o=n(6),a=(n(0),n(211)),i={id:"browser-sync",title:"Browser Sync",sidebar_label:"Browser Sync"},c={id:"basics/browser-sync",title:"Browser Sync",description:"[![docs-source](https://img.shields.io/badge/source-eigthshift--frontend--libs-yellow?style=for-the-badge&logo=javascript&labelColor=2a2a2a)](https://github.com/infinum/eightshift-frontend-libs)",source:"@site/docs/basics/browser-sync.md",permalink:"/eightshift-docs/docs/basics/browser-sync",sidebar_label:"Browser Sync",sidebar:"docs",previous:{title:"Fonts",permalink:"/eightshift-docs/docs/basics/fonts"},next:{title:"Blocks",permalink:"/eightshift-docs/docs/basics/blocks"}},s=[{value:"Override default functionality",id:"override-default-functionality",children:[]}],l={rightToc:s};function u(e){var t=e.components,n=Object(o.a)(e,["components"]);return Object(a.b)("wrapper",Object(r.a)({},l,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("p",null,Object(a.b)("a",Object(r.a)({parentName:"p"},{href:"https://github.com/infinum/eightshift-frontend-libs"}),Object(a.b)("img",Object(r.a)({parentName:"a"},{src:"https://img.shields.io/badge/source-eigthshift--frontend--libs-yellow?style=for-the-badge&logo=javascript&labelColor=2a2a2a",alt:"docs-source"})))),Object(a.b)("p",null,Object(a.b)("a",Object(r.a)({parentName:"p"},{href:"https://browsersync.io/docs"}),"Browsersync")," is a Node module that enables you to develop sites faster. It will react to any code change and 'refresh' the site without you needing to refresh it. In the background, it runs a small local server. When configured, it will inject a script on your web page to react to any code change."),Object(a.b)("p",null,"Besides that, you can test your site on various devices on the same network."),Object(a.b)("p",null,"If comes by default with the boilerplate, and when you run:"),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-bash"}),"npm start\n")),Object(a.b)("p",null,"it will proxy the page you've specified in the ",Object(a.b)("inlineCode",{parentName:"p"},"projectUrl")," to your local server"),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-bash"}),"[Browsersync] Proxying: https://local-url.test\n[Browsersync] Access URLs:\n --------------------------------------\n       Local: https://localhost:3000\n    External: https://192.168.0.25:3000\n --------------------------------------\n          UI: http://localhost:3001\n UI External: http://localhost:3001\n --------------------------------------\n")),Object(a.b)("p",null,"Using the IP address, you can open it on any device (mobile phone or a tablet) that is connected to the same network, and you'll see how your site looks like on them."),Object(a.b)("h2",{id:"override-default-functionality"},"Override default functionality"),Object(a.b)("p",null,"If you need to override the default settings (because you are using HTTPS or change some default configuration), you'll need to disable the default config and add your own."),Object(a.b)("p",null,"For example, if you want to use ",Object(a.b)("inlineCode",{parentName:"p"},"HTTPS")," instead of ",Object(a.b)("inlineCode",{parentName:"p"},"HTTP")," in your local development, you'd put in your ",Object(a.b)("inlineCode",{parentName:"p"},"webpack.config.js"),":"),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),"/* eslint-disable import/no-dynamic-require, global-require */\n\nconst BrowserSyncPlugin = require('browser-sync-webpack-plugin');\n\n/**\n * This is the main entry point for Webpack config.\n * All the settings are pulled from node_modules/@eightshift/frontend-libs/webpack.\n * We are loading mostly used configuration, but you can always override or turn off the default setup and provide your own.\n * Please referrer to Eightshift-libs wiki for details.\n */\nmodule.exports = (env, argv) => {\n\n  const projectConfig = {\n    config: {\n      projectDir: __dirname, // Current project directory absolute path.\n      projectUrl: 'local-url.test', // Used for providing browsersync functionality.\n      projectPath: 'wp-content/themes/your-theme-name', // Project path relative to project root.\n    },\n    overrides: [\n      'browserSyncPlugin', // Disable the default.\n    ],\n  };\n\n  // Generate webpack config for this project using options object.\n  const project = require('./node_modules/@eightshift/frontend-libs/webpack')(argv.mode, projectConfig);\n\n  return {\n    ...project,\n    plugins: [\n      ...project.plugins,\n      new BrowserSyncPlugin({\n        host: 'localhost',\n        port: 3000,\n        proxy: 'https://local-url.test', // It's important to add the protocol when using https!\n        https: true,\n      }, {\n        reload: false,\n      }),\n    ],\n  };\n};\n")))}u.isMDXComponent=!0},211:function(e,t,n){"use strict";n.d(t,"a",(function(){return p})),n.d(t,"b",(function(){return f}));var r=n(0),o=n.n(r);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=o.a.createContext({}),u=function(e){var t=o.a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):c({},t,{},e)),n},p=function(e){var t=u(e.components);return o.a.createElement(l.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return o.a.createElement(o.a.Fragment,{},t)}},d=Object(r.forwardRef)((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,i=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),p=u(n),d=r,f=p["".concat(i,".").concat(d)]||p[d]||b[d]||a;return n?o.a.createElement(f,c({ref:t},l,{components:n})):o.a.createElement(f,c({ref:t},l))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,i=new Array(a);i[0]=d;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:r,i[1]=c;for(var l=2;l<a;l++)i[l]=n[l];return o.a.createElement.apply(null,i)}return o.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"}}]);